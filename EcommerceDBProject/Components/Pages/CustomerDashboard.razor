@page "/customer-dashboard/{UserDetailId}"
@layout CustomerLayout
@rendermode InteractiveServer
@using EcommerceDBProject.Components.Layout
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Buttons;

<PageTitle>Home Page</PageTitle>

<style>
    .dialog-box {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid black;
        z-index: 1000;
    }

    .category-label {
        display: block;
        margin-bottom: 8px;
        font-size: 18px;
        color: #333;
    }

    .category-select {
        width: 100%;
        padding: 16px;
        border: none;
        border-radius: 5px;
        background-color: #f5f5f5;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
        cursor: pointer;
        font-size: 16px;
        color: #333;
    }

        .category-select:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .category-option {
        padding: 12px 16px;
        font-size: 16px;
        color: #333;
    }

    .product-card {
        width: 100%;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 16px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        position: relative;
        background-color: #f5f5f5;
        transition: transform 0.2s;
        margin-bottom: 16px;
    }

        .product-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .product-card-checkbox {
        position: absolute;
        top: 16px;
        right: 16px;
        width: 20px;
        height: 20px;
        border: 1px solid #ddd;
        border-radius: 3px;
        appearance: none;
        cursor: pointer;
        background-color: #fff;
        transition: background-color 0.2s;
    }

        .product-card-checkbox:checked {
            background: #4CAF50;
            border-color: #4CAF50;
        }

    .product-card-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 16px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product-card-name {
        margin: 0;
        margin-bottom: 8px;
        font-size: 24px;
        color: #333;
        text-shadow: 1px 1px 1px #ccc;
    }

    .product-card-description {
        margin: 0;
        margin-bottom: 16px;
        font-size: 16px;
        color: #666;
    }

    .product-card-quantity-price {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .product-card-quantity-price label {
            margin-right: 8px;
            font-size: 18px;
            color: #333;
        }

    .product-card-price {
        font-size: 24px;
        font-weight: bold;
        color: #4CAF50;
    }
</style>

<div class="row">
    <div class="col-8">
        <label class="category-label" for="category">Select Category:</label>
        <select class="category-select" id="category" name="category" @onchange="OnProductCategoryChanged">
            @foreach (var productCategory in ProductCategories)
            {
                <option class="category-option"
                        value="@productCategory.CategoryId">
                    @productCategory.CategoryName
                </option>
            }
        </select>
    </div>
    <div class="col-2"></div>
    <div class="col-2">
        <button type="button" class="btn btn-primary" @onclick="OpenConfirmOrderModel">
            Order
        </button>
    </div>
</div>

<div class="row col-12">
    @foreach (var inventoryItem in InventoryItemsList)
    {
        inventoryItem.Product = ProductService.GetProductFromProductId(inventoryItem.ProductId);
        inventoryItem.Seller = SellerService.GetSellerFromSellerId(inventoryItem.SellerId);
        var sellerName = SellerService.GetSellerFullNameFromSellerId(inventoryItem.SellerId);
        <div class="col-4">
            <div class="product-card">
                <input @onchange="(e) => OnInventoryItemSelect(inventoryItem, e)" type="checkbox" class="product-card-checkbox">
                <img src="" alt="Product image" class="product-card-image">
                <h2 class="product-card-name">@inventoryItem.Product.ProductName</h2>
                <p class="product-card-description">@inventoryItem.Product.ProductDescription</p>
                <p class="product-card-description">Stock Amount: @inventoryItem.StockAmount</p>
                <p class="product-card-description">Seller: @sellerName</p>
                <div class="product-card-quantity-price">
                    <span class="product-card-price">$@inventoryItem.SalePrice</span>
                </div>
                <div class="product-card-quantity-price">
                    <label for="quantity">Quantity:</label>
                    <input readonly="@(!IsInventoryItemCheckboxChecked(inventoryItem))"
                           @onchange="(e) => OnSelectedInventoryItemQuantityChange(inventoryItem, e)"
                           type="number" id="quantity" name="quantity" min="1"
                           max="@inventoryItem.StockAmount" value="1">
                </div>
            </div>
        </div>
    }
</div>


<SfDialog Width="90%" Target="#target1" IsModal="true" ShowCloseIcon="true" @bind-Visible="@InitialPageData.IsOrderModelShow">
    <DialogTemplates>
        <Header>Confirm Order</Header>
        <Content>
            <h3>Shipping Address</h3>
            <div class="col-md-6">
                <label for="inputAddress" class="form-label">House #</label>
                <input type="text" class="form-control" id="inputAddress" placeholder="House # 2, Block D" @bind-value="@Address.HouseNumber">
            </div>
            <div class="col-md-6">
                <label for="inputAddress2" class="form-label">Street</label>
                <input type="text" class="form-control" id="inputAddress2" placeholder="G.T. Road" @bind-value="@Address.Street">
            </div>

            <div class="col-md-6">
                <label for="inputCity" class="form-label">City</label>
                <input type="text" class="form-control" id="inputCity" @bind-value="@Address.City">
            </div>
            <div class="col-md-6">
                <label for="inputCountry" class="form-label">Country</label>
                <input type="text" class="form-control" id="inputCountry" @bind-value="@Address.Country">
            </div>

            <div class="col-md-6">
                <label for="inputRegion" class="form-label">Region</label>
                <input type="text" class="form-control" id="inputRegion" @bind-value="@Address.Region">
            </div>
            <div class="col-md-6">
                <label for="inputZip" class="form-label">Postal Code</label>
                <input type="text" class="form-control" id="inputZip" @bind-value="@Address.ZipCode">
            </div>

            <div class="col-md-6">
                <label for="paymentMethod" class="form-label">Payment Method:</label>
                <select class="form-control" id="paymentMethod" @onchange="OnPaymentMethodChanged">
                    <option value="Credit Card">Credit Card</option>
                    <option value="Cash On Delivery">Cash On Delivery</option>
                    <option value="PayPal">PayPal</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="paymentMethod" class="form-label">Shipping Method:</label>
                <select class="form-control" id="paymentMethod" @onchange="OnShippingMethodChanged">
                    <option value="Express">Express</option>
                    <option value="Standard">Standard</option>
                    <option value="Dhl">Dhl</option>
                </select>
            </div>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <SfButton type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</SfButton>
        @if (InitialPageData.IsOrderProcessing)
        {
            <button type="button" class="btn btn-success" @onclick="() => ConfirmOrder()">Confirm Order</button>
            @* <DialogButton title="Confirm Order" Content="Confirm Order" OnClick="() => ConfirmOrder()" /> *@
        }
        else
        {
            <button class="btn btn-success" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                Loading...
            </button>
        }
    </DialogButtons>
    <DialogEvents OnOpen="@OnDialogOpenHandler"></DialogEvents>
    <DialogAnimationSettings Effect="@DialogEffect.None"></DialogAnimationSettings>
</SfDialog>