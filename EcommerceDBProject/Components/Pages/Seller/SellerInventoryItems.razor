@page "/seller-dashboard/{UserDetailId}/products/"
@layout SellerLayout
@rendermode InteractiveServer
@using Blazored.Toast
@using Blazored.Toast.Configuration
@using EcommerceDBProject.Components.Layout
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Buttons;

<PageTitle>InventoryItems</PageTitle>
<style>
    .blazored-toast-container {
        z-index: 99999;
    }

    .toast {
        display: none;
        padding: 1.5rem;
        color: #fff;
        z-index: 1;
        position: absolute;
        width: 25rem;
        top: 2rem;
        border-radius: 1rem;
        left: 50%;
    }

    .toast-icon {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 0 1rem;
        font-size: 2.5rem;
    }

    .toast-body {
        display: flex;
        flex-direction: column;
        flex: 1;
        padding-left: 1rem;
    }

        .toast-body p {
            margin-bottom: 0;
        }

    .toast-visible {
        display: flex;
        flex-direction: row;
        animation: fadein 1s;
    }

    .sidebar .sidebar-override {
        background-color: rgb(50,50,50);
        background-image: none;
        height: 100vh;
    }

    .format-style {
        font-family: Consolas;
        font-size: 12px;
        font-weight: bold;
        word-spacing: 3px;
    }

    .footer {
        height: 30px;
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        color: white;
        text-align: center;
    }


    .e-return-icon::before {
        content: '\e752';
    }

</style>

<style>
    .dialog-box {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid black;
        z-index: 1000;
    }

    .label-style {
        font-size: 18px;
        font-weight: bold;
        text-align: left;
        margin: 2px;
        font-family: Arial, Helvetica, sans-serif;
    }

    .category-label {
        display: block;
        margin-bottom: 8px;
        font-size: 18px;
        color: #333;
    }

    .category-select {
        width: 100%;
        padding: 16px;
        border: 2px solid lightgrey;
        border-radius: 5px;
        margin-top: 10px;
        background-color: #f5f5f5;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
        cursor: pointer;
        font-size: 16px;
        color: #333;
    }

        .category-select:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .category-option {
        padding: 6px 5px;
        font-size: 16px;
        color: #333;
    }

    .product-card {
        width: 100%;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 16px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        position: relative;
        background-color: #dfd6e7;
        ;
        transition: transform 0.2s;
        margin-bottom: 16px;
    }

        .product-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .product-card-checkbox {
        position: absolute;
        top: 16px;
        right: 16px;
        width: 20px;
        height: 20px;
        border: 1px solid #ddd;
        border-radius: 3px;
        appearance: none;
        cursor: pointer;
        background-color: #fff;
        transition: background-color 0.2s;
    }

        .product-card-checkbox:checked {
            background: #6c5b7b;
            border-color: #6c5b7b;
        }

    .product-card-image {
        width: 90%;
        height: 200px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 16px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product-card-name {
        margin: 0;
        margin-bottom: 8px;
        font-size: 24px;
        color: #333;
        text-shadow: 1px 1px 1px #ccc;
    }

    .product-card-description {
        margin: 0;
        margin-bottom: 16px;
        font-size: 16px;
        color: #666;
    }

    .product-card-quantity-price {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .product-card-quantity-price label {
            margin-right: 8px;
            font-size: 18px;
            color: #333;
        }

    .product-card-price {
        font-size: 24px;
        font-weight: bold;
        color: #6c5b7b;
    }
</style>

<div class="col-12 m-2 p-2 row">
    <div class="col-8 m-0 p-0 row">
        <div class="col-3 mt-3">
            <label style="font-size:18px;text-align:le9*8ft;font-family:sans-serif;margin-top:10px;font-weight:bold;">Select Category</label>
        </div>
        <div class="col-7 " style="margin-left:-20px;">
            <select class="category-select" id="category" name="category" @onchange="OnProductCategoryChanged">
                <option class="category-option" style="border:1px solid lightgrey;" value="no-select">
                    Select Category
                </option>
                @foreach (var productCategory in ProductCategories)
                {
                    <option class="category-option" style="border:1px solid lightgrey;"
                            value="@productCategory.CategoryId">
                        @productCategory.CategoryName
                    </option>
                }
            </select>
        </div>
    </div>
</div>
<div class="mt-2 mb-2 mr-0 ml-0 p-0" style="border-bottom:2px solid lightgrey"></div>
<div class="col-12 m-0 p-0 row">
    <div class="col-12 m-2">
        <h3 style="font-family:sans-serif;text-align:center;color:black;font-weight:bold">All Products</h3>
    </div>
    <div class="col-12 mt-2 row">
        @foreach (var inventoryItem in InventoryItemsList)
        {
            inventoryItem.Product = ProductService.GetProductFromProductId(inventoryItem.ProductId);
            inventoryItem.Seller = UserService.GetSellerFromSellerId(inventoryItem.SellerId);
            var sellerName = UserService.GetSellerFullNameFromSellerId(inventoryItem.SellerId);
            <div class="col-3">
                <div class="product-card" style="border:1px solid grey">
                    <img src="Products.jpg" alt="Example Image" class="product-card-image" style="border:1px solid black">
                    <h2 class="product-card-name m-1" style="font-weight:bold;">@inventoryItem.Product.ProductName</h2>
                    <p class="product-card-description">@inventoryItem.Product.ProductDescription</p>
                    <p class="product-card-description m-0 p-0" style="font-size:18px;color:black;font-family:sans-serif">Stock Amount: @inventoryItem.StockAmount</p>
                    <div class="product-card-quantity-price">
                        <span class="product-card-price">$@System.Math.Round(inventoryItem.SalePrice, 2)</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.TopRight"
                Timeout="9999999"
                IconType="IconType.FontAwesome"
                ErrorIcon="error_outline"
                InfoIcon="school"
                SuccessIcon="done_outline"
                WarningIcon="warning" />